name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v0
      with:
        sdk-platform: '35'
        sdk-build-tools: '35.0.0'
        ndk-version: '25.2.9519653'
        cmake-version: '3.22.1'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Debug APK
      run: ./gradlew :ecomm:assembleDebug
      
    - name: Build Release APK
      run: ./gradlew :ecomm:assembleRelease
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: ecomm-debug
        path: ecomm/build/outputs/apk/debug/ecomm-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: ecomm-release
        path: ecomm/build/outputs/apk/release/ecomm-release.apk
        
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v0
      with:
        sdk-platform: '35'
        sdk-build-tools: '35.0.0'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Unit Tests
      run: ./gradlew :ecomm:testDebugUnitTest
      
    - name: Run Instrumented Tests
      run: ./gradlew :ecomm:connectedDebugAndroidTest
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          ecomm/build/reports/tests/
          ecomm/build/outputs/androidTest-results/
          
  code-quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v0
      with:
        sdk-platform: '35'
        sdk-build-tools: '35.0.0'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Lint
      run: ./gradlew :ecomm:lintDebug
      
    - name: Run Detekt
      run: ./gradlew :ecomm:detekt
      
    - name: Upload Lint Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: ecomm/build/reports/lint-results.xml
        
    - name: Upload Detekt Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: detekt-results
        path: ecomm/build/reports/detekt/
        
  security:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v0
      with:
        sdk-platform: '35'
        sdk-build-tools: '35.0.0'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Dependency Check
      run: ./gradlew :ecomm:dependencyCheckAnalyze
      
    - name: Upload Security Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-results
        path: ecomm/build/reports/dependency-check-report.html
        
  release:
    runs-on: ubuntu-latest
    needs: [build, test, code-quality, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v0
      with:
        sdk-platform: '35'
        sdk-build-tools: '35.0.0'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Release Bundle
      run: ./gradlew :ecomm:bundleRelease
      
    - name: Sign Release Bundle
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: ecomm/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
        
    - name: Upload Release Bundle
      uses: actions/upload-artifact@v4
      with:
        name: ecomm-release-bundle
        path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.sign_app.outputs.signedReleaseFile }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
